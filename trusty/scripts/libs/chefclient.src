#!/bin/sh

. ${SCRIPTLIB}/common.src

#######
# fetch_client()
#
# description: download package for ubuntu 14.04 deb package
# usage:
#    PKG_MANITEST='/path/to/manifest.csv' PKG_PATH='/path/to/pkgs' fetch_client
##########################################
fetch_chef() {
  ##### Verify Variables Set
  [ -z "${PKG_MANIFEST}" ] && error "PKG_MANIFEST not set. Aborting"
  [ -z "${PKG_PATH}" ] && error "PKG_PATH not set. Aborting"
  ##### Fetch Package and Package URL variables
  PACKAGE=$(grep '^chef,' ${PKG_MANIFEST} | cut -d, -f2)
  eval PKG_URL=$(grep '^chef,' ${PKG_MANIFEST} | cut -d, -f3)

  ##### Download Packages
  # fetch $PACKAGE $PKG_URL
}

#######
# install_chefclient()
#
# description: install downloaded package for ubuntu 14.04 deb package
# usage:
#   PKG_MANITEST='/path/to/manifest.csv' \
#   PKG_PATH='/path/to/pkgs' install_chefclient
##########################################
install_chef() {
  ##### Verify Variables Set
  [ -z "${PKG_MANIFEST}" ] && error "PKG_MANIFEST not set. Aborting"
  [ -z "${PKG_PATH}" ] && error "PKG_PATH not set. Aborting"
  ##### Fetch Package Name
  PACKAGE=$(grep '^chef,' ${PKG_MANIFEST} | cut -d, -f2)
  PKG_VER=$(echo ${PACKAGE} | awk -F "_" '{ print $2 }' | cut -d. -f1,2 | tr -d '.')

  ##### Exit if Package file is not found
  [ -f "${PKG_PATH}/${PACKAGE}" ] || error "ERROR: ${PKG_PATH}/${PACKAGE} not found."

  ##### Install Package if not installed already or if older one exists
  if dpkg -s 'chef' &> /dev/null; then
    CURR_VER=$(dpkg-query -W -f='${Version}\n' chef | cut -d. -f1,2 | tr -d '.')
    if [ ${PKG_VER} -gt ${CURR_VER} ]; then
      rm -rfv /etc/chef /var/chef /var/log/chef # purge existing files
      dpkg -r 'chef'                            # remove older chef package
      dpkg -i "${PKG_PATH}/${PACKAGE}"          # install target chefclient pkg
    fi
  else
    dpkg -i "${PKG_PATH}/${PACKAGE}"            # install target chefclient pkg
  fi
}
